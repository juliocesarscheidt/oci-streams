version: '3.4'

services:
  mysql:
    container_name: mysql
    hostname: mysql
    image: mysql:8.0
    ports:
      - '3336:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_HOST: "%"
      TZ: 'America/Sao_Paulo'
    networks:
      - subnet_0
    restart: on-failure
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  consumer-client:
    container_name: consumer-client
    hostname: consumer-client
    image: consumer-client:1.0.0
    build:
      context: ./src
    restart: on-failure
    networks:
      - subnet_0
    environment:
      BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
      TOPIC_NAME: ${TOPIC_NAME}
      STREAM_USER_NAME: ${STREAM_USER_NAME}
      STREAM_USER_PASSWORD: ${STREAM_USER_PASSWORD}

  kafka-connect:
    container_name: kafka-connect
    hostname: kafka-connect
    image: kafka-connect:6.0.0
    stdin_open: yes
    tty: yes
    build:
      context: ./kafka-connect
      args:
        BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
        STREAM_USER_NAME: ${STREAM_USER_NAME}
        STREAM_USER_PASSWORD: ${STREAM_USER_PASSWORD}
        KAFKA_CONNECT_TOPIC_CONFIG: ${KAFKA_CONNECT_TOPIC_CONFIG}
        KAFKA_CONNECT_TOPIC_OFFSET: ${KAFKA_CONNECT_TOPIC_OFFSET}
        KAFKA_CONNECT_TOPIC_STATUS: ${KAFKA_CONNECT_TOPIC_STATUS}
    restart: on-failure
    networks:
      - subnet_0
    ports:
      - 8083:8083
    volumes:
      - connector-data:/data/

  kafka-connect-setup:
    container_name: kafka-connect-setup
    hostname: kafka-connect-setup
    image: kafka-connect-setup:6.0.0
    build:
      context: ./kafka-connect-setup
    restart: "no"
    networks:
      - subnet_0
    environment:
      KAFKA_CONNECT_URI: http://kafka-connect:8083
      FORCE_RECREATE: 1
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASS: ${MYSQL_PASS}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TOPIC_NAME: ${TOPIC_NAME}

networks:
  subnet_0:
    driver: bridge

volumes:
  mysql-data: {}
  connector-data: {}
